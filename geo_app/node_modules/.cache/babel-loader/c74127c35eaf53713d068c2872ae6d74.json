{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ian\\\\dev2\\\\group_project\\\\front_end\\\\geo-frontend\\\\geo_app\\\\src\\\\components\\\\CenterMaps.js\";\nimport { Component } from 'react';\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '90%',\n  height: '90%'\n};\n\nclass CenterMaps extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSearchText = () => {};\n\n    this.searchRestaurant = () => {\n      fetch(this.state.locationURL + this.state.output + this.state.input + this.state.searchText + this.state.inputType + this.state.keyword + this.state.apiKey).then(data => {\n        return data.json();\n      }, err => console.log(err)).then(parsedData => this.setState({\n        location: parsedData\n      }), err => console.log(err));\n    };\n\n    this.state = {\n      // http request = locationURL + output + input + search text + inputtype + optional params + apikey\n      locationURL: \"https://maps.googleapis.com/maps/api/place/findplacefromtext/\",\n      output: \"json?\",\n      input: \"?input=\",\n      searchText: \"mcdonalds\",\n      // spaces must be replaced w \"%20\" - filter?\n      inputType: \"&inputtype=textquery\",\n      keyword: \"&keyword=restaurant\",\n      apiKey: \"&key=AIzaSyDe6WRFuz0lxAuAJ1ZfiviZuQXRrtQCjc0\",\n      lat: \"\",\n      lng: \"\",\n      location: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centermaps flexitem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Center Maps \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"mapView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CenterMaps;","map":{"version":3,"sources":["C:/Users/Ian/dev2/group_project/front_end/geo-frontend/geo_app/src/components/CenterMaps.js"],"names":["Component","Map","GoogleApiWrapper","mapStyles","width","height","CenterMaps","constructor","props","setSearchText","searchRestaurant","fetch","state","locationURL","output","input","searchText","inputType","keyword","apiKey","then","data","json","err","console","log","parsedData","setState","location","lat","lng","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAAQC,GAAR,EAAaC,gBAAb,QAAoC,mBAApC;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;;AAKA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,aAhBmB,GAgBH,MAAM,CAErB,CAlBkB;;AAAA,SAoBnBC,gBApBmB,GAoBA,MAAM;AACrBC,MAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWC,WAAX,GAAyB,KAAKD,KAAL,CAAWE,MAApC,GAA6C,KAAKF,KAAL,CAAWG,KAAxD,GAAgE,KAAKH,KAAL,CAAWI,UAA3E,GAAwF,KAAKJ,KAAL,CAAWK,SAAnG,GAA+G,KAAKL,KAAL,CAAWM,OAA1H,GAAoI,KAAKN,KAAL,CAAWO,MAAhJ,CAAL,CACKC,IADL,CACUC,IAAI,IAAI;AAAE,eAAOA,IAAI,CAACC,IAAL,EAAP;AAAoB,OADxC,EAC0CC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADjD,EAEKH,IAFL,CAEUM,UAAU,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF;AAAZ,OAAd,CAFxB,EAEiEH,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFxE;AAGH,KAxBkB;;AAEf,SAAKX,KAAL,GAAa;AACT;AACAC,MAAAA,WAAW,EAAE,+DAFJ;AAGTC,MAAAA,MAAM,EAAE,OAHC;AAITC,MAAAA,KAAK,EAAE,SAJE;AAKTC,MAAAA,UAAU,EAAE,WALH;AAKgB;AACzBC,MAAAA,SAAS,EAAE,sBANF;AAOTC,MAAAA,OAAO,EAAE,qBAPA;AAQTC,MAAAA,MAAM,EAAE,8CARC;AASTU,MAAAA,GAAG,EAAE,EATI;AAUTC,MAAAA,GAAG,EAAE,EAVI;AAWTF,MAAAA,QAAQ,EAAE;AAXD,KAAb;AAaH;;AAWDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAG;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA1C8B;;AA6CnC,eAAezB,UAAf","sourcesContent":["import { Component } from 'react'\r\nimport {Map, GoogleApiWrapper} from \"google-maps-react\"\r\n\r\nconst mapStyles = {\r\n    width: '90%',\r\n    height: '90%'\r\n}\r\n\r\nclass CenterMaps extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // http request = locationURL + output + input + search text + inputtype + optional params + apikey\r\n            locationURL: \"https://maps.googleapis.com/maps/api/place/findplacefromtext/\",\r\n            output: \"json?\",\r\n            input: \"?input=\",\r\n            searchText: \"mcdonalds\", // spaces must be replaced w \"%20\" - filter?\r\n            inputType: \"&inputtype=textquery\",\r\n            keyword: \"&keyword=restaurant\",\r\n            apiKey: \"&key=AIzaSyDe6WRFuz0lxAuAJ1ZfiviZuQXRrtQCjc0\",\r\n            lat: \"\",\r\n            lng: \"\",\r\n            location: {}\r\n        }\r\n    }\r\n    setSearchText = () => {\r\n\r\n    }\r\n\r\n    searchRestaurant = () => {\r\n        fetch(this.state.locationURL + this.state.output + this.state.input + this.state.searchText + this.state.inputType + this.state.keyword + this.state.apiKey)\r\n            .then(data => { return data.json() }, err => console.log(err))\r\n            .then(parsedData => this.setState({ location: parsedData }), err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"centermaps flexitem\">\r\n                <h1>Center Maps </h1>\r\n                <iframe className = \"mapView\">\r\n                    \r\n                </iframe>\r\n                {/* <Map \r\n                    google = {this.props.google}\r\n                    xoom = {8}\r\n                    style = {mapStyles}\r\n                    initialCenter = {{lat: Number(this.state.lat), lng: Number(this.state.lng)}}\r\n                ></Map> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CenterMaps "]},"metadata":{},"sourceType":"module"}