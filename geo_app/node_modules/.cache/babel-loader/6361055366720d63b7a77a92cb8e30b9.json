{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ian\\\\dev2\\\\group_project\\\\front_end\\\\geo-frontend\\\\geo_app\\\\src\\\\components\\\\MainWindow.js\";\nimport { Component } from 'react';\nimport LeftScroll from './LeftScroll';\nimport CenterMaps from './CenterMaps';\nimport RightPanel from './RightPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3003';\n\nclass MainWindow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplayedReview = review => {\n      this.setState({\n        displayedReview: review,\n        newReview: false,\n        updateReview: false,\n        showReview: true\n      });\n    };\n\n    this.toggleShowReview = () => {\n      let updateDisplayedReview;\n\n      if (this.state.reviews.length < 1) {\n        updateDisplayedReview = {\n          name: \"Reviewed Restaurant\",\n          rating: 5,\n          description: \"Description of your experience.\",\n          location: \"Location\"\n        };\n      } else {\n        updateDisplayedReview = this.state.reviews[0];\n      }\n\n      this.setState({\n        newReview: false,\n        updateReview: false,\n        showReview: true,\n        displayedReview: updateDisplayedReview\n      });\n    };\n\n    this.toggleNewReview = () => {\n      this.setState({\n        newReview: true,\n        updateReview: false,\n        showReview: false\n      });\n    };\n\n    this.toggleUpdateReview = () => {\n      this.setState({\n        newReview: false,\n        updateReview: true,\n        showReview: false\n      });\n    };\n\n    this.handleAddReview = review => {\n      const updatedReviews = [...this.state.reviews, review];\n      this.setState({\n        displayedReview: review,\n        reviews: updatedReviews,\n        newReview: false,\n        updateReview: false,\n        showReview: true\n      });\n    };\n\n    this.deleteReview = id => {\n      fetch(`${baseURL}/reviews/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(resJson => {\n        this.setState({\n          reviews: this.state.reviews.filter(review => review._id !== resJson.deleted_review._id)\n        });\n      });\n      this.toggleShowReview();\n    };\n\n    this.handleUpdateReview = updatedReview => {\n      const copyReviews = [...this.state.reviews];\n      const index = this.state.reviews.findIndex(review => review._id === updatedReview._id);\n      copyReviews[index] = updatedReview;\n      this.setState({\n        reviews: copyReviews,\n        displayedReview: updatedReview,\n        ewReview: false,\n        updateReview: false,\n        showReview: true\n      });\n    };\n\n    this.state = {\n      reviews: [],\n      newReview: false,\n      updateReview: false,\n      showReview: true,\n      displayedReview: {}\n    };\n    this.getReviews = this.getReviews.bind(this);\n  }\n\n  componentDidMount() {\n    this.getReviews();\n  }\n\n  getReviews() {\n    fetch(baseURL + '/reviews').then(data => {\n      return data.json();\n    }, err => console.log(err)).then(parsedData => this.setState({\n      reviews: parsedData\n    }), err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mainwindow\",\n      children: [/*#__PURE__*/_jsxDEV(LeftScroll, {\n        reviews: this.state.reviews,\n        getDisplayedReview: this.getDisplayedReview,\n        toggleNewReview: this.toggleNewReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CenterMaps, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        showReview: this.state.showReview,\n        newReview: this.state.newReview,\n        updateReview: this.state.updateReview,\n        displayedReview: this.state.displayedReview,\n        handleAddReview: this.handleAddReview,\n        toggleUpdateReview: this.toggleUpdateReview,\n        deleteReview: this.deleteReview,\n        handleUpdateReview: this.handleUpdateReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MainWindow;","map":{"version":3,"sources":["C:/Users/Ian/dev2/group_project/front_end/geo-frontend/geo_app/src/components/MainWindow.js"],"names":["Component","LeftScroll","CenterMaps","RightPanel","baseURL","MainWindow","constructor","props","getDisplayedReview","review","setState","displayedReview","newReview","updateReview","showReview","toggleShowReview","updateDisplayedReview","state","reviews","length","name","rating","description","location","toggleNewReview","toggleUpdateReview","handleAddReview","updatedReviews","deleteReview","id","fetch","method","headers","then","res","json","resJson","filter","_id","deleted_review","handleUpdateReview","updatedReview","copyReviews","index","findIndex","ewReview","getReviews","bind","componentDidMount","data","err","console","log","parsedData","render"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport LeftScroll from './LeftScroll'\r\nimport CenterMaps from './CenterMaps'\r\nimport RightPanel from './RightPanel'\r\n\r\nconst baseURL = 'http://localhost:3003'\r\n\r\nclass MainWindow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          reviews: [],\r\n          newReview: false,\r\n          updateReview: false,\r\n          showReview: true,\r\n          displayedReview: {},\r\n        }\r\n        this.getReviews = this.getReviews.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getReviews()\r\n    }\r\n\r\n    getReviews() {\r\n        fetch(baseURL + '/reviews')\r\n            .then(data => { return data.json() }, err => console.log(err))\r\n            .then(parsedData => this.setState({ reviews: parsedData }), err => console.log(err))\r\n    }\r\n\r\n    getDisplayedReview = (review) => {\r\n        this.setState({\r\n            displayedReview: review,\r\n            newReview: false,\r\n            updateReview: false,\r\n            showReview: true\r\n        })\r\n    }\r\n    \r\n    toggleShowReview = () => {\r\n        let updateDisplayedReview\r\n        if (this.state.reviews.length < 1) {\r\n            updateDisplayedReview = {name: \"Reviewed Restaurant\", rating: 5, description: \"Description of your experience.\", location: \"Location\"}\r\n        } else {\r\n            updateDisplayedReview = this.state.reviews[0]\r\n        }\r\n        this.setState({\r\n            newReview: false,\r\n            updateReview: false,\r\n            showReview: true,\r\n            displayedReview: updateDisplayedReview\r\n        })\r\n    }\r\n\r\n    toggleNewReview = () => {\r\n        this.setState({\r\n            newReview: true,\r\n            updateReview: false,\r\n            showReview: false\r\n        })\r\n    }\r\n\r\n    toggleUpdateReview = () => {\r\n        this.setState({\r\n            newReview: false,\r\n            updateReview: true,\r\n            showReview: false\r\n        })\r\n    }\r\n\r\n    handleAddReview = (review) => {\r\n        const updatedReviews = [...this.state.reviews, review]\r\n        this.setState({\r\n            displayedReview: review,\r\n            reviews: updatedReviews,\r\n            newReview: false,\r\n            updateReview: false,\r\n            showReview: true\r\n        })\r\n    }\r\n\r\n    deleteReview = (id) => {\r\n        fetch(`${baseURL}/reviews/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\" : \"application/json\"\r\n            },\r\n          }).then(res => res.json())\r\n          .then(resJson => { \r\n              this.setState({reviews: this.state.reviews.filter(review => review._id !== resJson.deleted_review._id\r\n              )})\r\n        })\r\n        this.toggleShowReview()\r\n    }\r\n\r\n    handleUpdateReview = (updatedReview) => {\r\n        const copyReviews = [...this.state.reviews]\r\n        const index = this.state.reviews.findIndex(review => review._id === updatedReview._id)\r\n        copyReviews[index] = updatedReview\r\n        this.setState({\r\n            reviews: copyReviews,\r\n            displayedReview: updatedReview,\r\n            ewReview: false,\r\n            updateReview: false,\r\n            showReview: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"mainwindow\">\r\n                < LeftScroll reviews = {this.state.reviews} getDisplayedReview = {this.getDisplayedReview} toggleNewReview = {this.toggleNewReview} />\r\n                < CenterMaps />\r\n                < RightPanel showReview = {this.state.showReview} newReview = {this.state.newReview} updateReview = {this.state.updateReview} displayedReview = {this.state.displayedReview} handleAddReview = {this.handleAddReview} toggleUpdateReview = {this.toggleUpdateReview} deleteReview = {this.deleteReview} handleUpdateReview = {this.handleUpdateReview}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainWindow"]},"metadata":{},"sourceType":"module"}